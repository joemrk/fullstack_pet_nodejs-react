[{"C:\\Users\\joe\\Desktop\\fullstack_pet_nodejs-react\\client\\src\\pages\\auth\\Auth.tsx":"1","C:\\Users\\joe\\Desktop\\fullstack_pet_nodejs-react\\client\\src\\Components\\Navbar.tsx":"2","C:\\Users\\joe\\Desktop\\fullstack_pet_nodejs-react\\client\\src\\Routes.tsx":"3","C:\\Users\\joe\\Desktop\\fullstack_pet_nodejs-react\\client\\src\\index.tsx":"4","C:\\Users\\joe\\Desktop\\fullstack_pet_nodejs-react\\client\\src\\pages\\sites\\Sites.tsx":"5","C:\\Users\\joe\\Desktop\\fullstack_pet_nodejs-react\\client\\src\\pages\\auth\\AfterAuth.tsx":"6","C:\\Users\\joe\\Desktop\\fullstack_pet_nodejs-react\\client\\src\\hooks\\auth.hook.ts":"7","C:\\Users\\joe\\Desktop\\fullstack_pet_nodejs-react\\client\\src\\generated\\graphql.tsx":"8","C:\\Users\\joe\\Desktop\\fullstack_pet_nodejs-react\\client\\src\\pages\\hosters\\Hosters.tsx":"9","C:\\Users\\joe\\Desktop\\fullstack_pet_nodejs-react\\client\\src\\App.tsx":"10","C:\\Users\\joe\\Desktop\\fullstack_pet_nodejs-react\\client\\src\\pages\\hosters\\CreateHoster.tsx":"11","C:\\Users\\joe\\Desktop\\fullstack_pet_nodejs-react\\client\\src\\pages\\sites\\CreateSite.tsx":"12","C:\\Users\\joe\\Desktop\\fullstack_pet_nodejs-react\\client\\src\\reportWebVitals.ts":"13"},{"size":5239,"mtime":1608063842911,"results":"14","hashOfConfig":"15"},{"size":1175,"mtime":1607458607582,"results":"16","hashOfConfig":"15"},{"size":1688,"mtime":1608149968928,"results":"17","hashOfConfig":"15"},{"size":1235,"mtime":1607980365759,"results":"18","hashOfConfig":"15"},{"size":3016,"mtime":1608150391365,"results":"19","hashOfConfig":"15"},{"size":635,"mtime":1607192912530,"results":"20","hashOfConfig":"15"},{"size":1140,"mtime":1607185865167,"results":"21","hashOfConfig":"15"},{"size":19251,"mtime":1608158056590,"results":"22","hashOfConfig":"15"},{"size":1480,"mtime":1608149996027,"results":"23","hashOfConfig":"15"},{"size":802,"mtime":1607186534823,"results":"24","hashOfConfig":"15"},{"size":3206,"mtime":1608066870499,"results":"25","hashOfConfig":"15"},{"size":3786,"mtime":1608158239700,"results":"26","hashOfConfig":"15"},{"size":425,"mtime":1606427118345,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"qq2ovg",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\joe\\Desktop\\fullstack_pet_nodejs-react\\client\\src\\pages\\auth\\Auth.tsx",["59"],"C:\\Users\\joe\\Desktop\\fullstack_pet_nodejs-react\\client\\src\\Components\\Navbar.tsx",[],"C:\\Users\\joe\\Desktop\\fullstack_pet_nodejs-react\\client\\src\\Routes.tsx",[],["60","61"],"C:\\Users\\joe\\Desktop\\fullstack_pet_nodejs-react\\client\\src\\index.tsx",["62"],"C:\\Users\\joe\\Desktop\\fullstack_pet_nodejs-react\\client\\src\\pages\\sites\\Sites.tsx",["63","64","65","66","67","68","69"],"import { Button, Divider, List, Radio, Space, Table } from 'antd';\r\nimport Layout from 'antd/lib/layout/layout';\r\nimport React from 'react'\r\nimport { useSitesQuery } from '../../generated/graphql';\r\nimport { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nconst columns = [\r\n  {\r\n    title: 'Hoster',\r\n    dataIndex: 'hoster',\r\n    key: 'hoster',\r\n  },\r\n  {\r\n    title: 'Domain',\r\n    dataIndex: 'domain',\r\n    key: 'domain',\r\n    render: (text: string) => <a href={`http://${text}`} target=\"_bank\">{text}</a>\r\n  },\r\n  {\r\n    title: 'Ip',\r\n    dataIndex: 'ip',\r\n    key: 'ip',\r\n  },\r\n  {\r\n    title: 'Campaign',\r\n    dataIndex: 'campaign',\r\n    key: 'campaign',\r\n    filters: [\r\n      {\r\n        text: 'PL - Maxemizer',\r\n        value: 'PL - Maxemizer'\r\n      },\r\n      {\r\n        text: 'EU - AdCode',\r\n        value: 'EU - AdCode'\r\n      },\r\n    ],\r\n    onFilter: (value: any, record: any) => record.campaign.indexOf(value) === 0,\r\n    sorter: (a: any, b: any) => a.domain.length - b.domain.length,\r\n    // sortDirections: ['descend'],\r\n  },\r\n  {\r\n    title: 'Description',\r\n    dataIndex: 'description',\r\n    key: 'description',\r\n  },\r\n  {\r\n    title: 'Yandex',\r\n    dataIndex: 'yandex',\r\n    key: 'yandex',\r\n    render: (text: string) => <a href={`http://yandex.metrica.ru/${text}`}>{text}</a>\r\n  },\r\n  {\r\n    title: 'Cloaking',\r\n    dataIndex: 'cloaking',\r\n    key: 'cloaking',\r\n    render: (text: string) => <a>{text}</a>\r\n  },\r\n  {\r\n    title: 'Holder',\r\n    dataIndex: 'holder',\r\n    key: 'holder',\r\n    render: (text: string) => <a href={`/users/${text}`}>{text}</a>\r\n  },\r\n  {\r\n    title: 'Creator',\r\n    dataIndex: 'creator',\r\n    key: 'creator',\r\n    render: (text: string) => <a href={`/users/${text}`}>{text}</a>\r\n  },\r\n  {\r\n    title: \"Action\",\r\n    key: \"action\",\r\n    render: () => (\r\n      <Space size=\"middle\">\r\n        <a>Transfer</a>\r\n        <a>Delete</a>\r\n      </Space>\r\n    )\r\n  }\r\n];\r\n\r\nconst Sites: React.FC = (props) => {\r\n\r\n  // rowSelection object indicates the need for row selection\r\n  const rowSelection = {\r\n    onChange: (selectedRowKeys: any, selectedRows: any) => {\r\n      console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\r\n    },\r\n    getCheckboxProps: (record: any) => ({\r\n      disabled: record.name === 'Disabled User', // Column configuration not to be checked\r\n      name: record.name,\r\n    }),\r\n  };\r\n  const history = useHistory()\r\n  const { data, loading, error } = useSitesQuery()\r\n\r\n  if (loading) return <div>Loading...</div>\r\n\r\n  return (\r\n    <Layout>\r\n      <div>\r\n        <Button\r\n          type=\"primary\"\r\n          size={'large'}\r\n          onClick={() => { history.push('/sites/create') }}\r\n        > Create\r\n      </Button>\r\n      </div>\r\n      <br />\r\n\r\n      <Divider />\r\n      <Table\r\n        rowSelection={{\r\n          type: 'checkbox',\r\n          ...rowSelection,\r\n        }}\r\n        dataSource={data?.sites}\r\n        columns={columns} />;\r\n\r\n\r\n\r\n    </Layout>\r\n  )\r\n}\r\nexport default Sites","C:\\Users\\joe\\Desktop\\fullstack_pet_nodejs-react\\client\\src\\pages\\auth\\AfterAuth.tsx",[],"C:\\Users\\joe\\Desktop\\fullstack_pet_nodejs-react\\client\\src\\hooks\\auth.hook.ts",[],"C:\\Users\\joe\\Desktop\\fullstack_pet_nodejs-react\\client\\src\\generated\\graphql.tsx",[],"C:\\Users\\joe\\Desktop\\fullstack_pet_nodejs-react\\client\\src\\pages\\hosters\\Hosters.tsx",["70","71","72","73"],"import { Button, Space, Table } from 'antd';\r\nimport Layout from 'antd/lib/layout/layout';\r\nimport React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { HosterEntity, useHostersQuery } from '../../generated/graphql';\r\n\r\n\r\n\r\nconst columns = [\r\n  {\r\n    title: 'Name',\r\n    dataIndex: 'name',\r\n    key: 'name',\r\n    render: (_: any, record: HosterEntity) => (<a href={record.siteLink} target=\"_blank\">{record.name}</a>)\r\n  },\r\n\r\n  {\r\n    title: 'Sites count',\r\n    dataIndex: 'sitesCount',\r\n    key: 'sitesCount',\r\n  },\r\n\r\n  {\r\n    title: 'Auth data',\r\n    dataIndex: 'sitesCount',\r\n    key: 'sitesCount',\r\n    render: (_: any, record: HosterEntity) => <a>Show</a>\r\n  },\r\n\r\n  {\r\n    title: 'Action',\r\n    key: 'x',\r\n    render: (_: any, record: HosterEntity) => (\r\n      <Space size=\"middle\">\r\n        <a>Edit</a>\r\n        <a href={`/sites?byHoster=${record.id}`}>Sites</a>\r\n      </Space>\r\n\r\n    )\r\n  }\r\n]\r\n\r\n\r\n\r\n\r\nconst Hosters: React.FC = ({ }) => {\r\n\r\n  const { data, loading } = useHostersQuery()\r\n  const history = useHistory()\r\n\r\n\r\n\r\n\r\n  if (loading) return <div>Loading...</div>\r\n  return (\r\n    <Layout>\r\n      <div>\r\n        <Button\r\n          type=\"primary\"\r\n          size={'large'}\r\n          onClick={() => { history.push('/hosters/create') }}\r\n        > Create\r\n        </Button>\r\n      </div>\r\n      <br />\r\n\r\n      <Table\r\n        dataSource={data?.hosters}\r\n        columns={columns} />\r\n\r\n\r\n\r\n    </Layout>\r\n  );\r\n}\r\nexport default Hosters","C:\\Users\\joe\\Desktop\\fullstack_pet_nodejs-react\\client\\src\\App.tsx",[],["74","75"],"C:\\Users\\joe\\Desktop\\fullstack_pet_nodejs-react\\client\\src\\pages\\hosters\\CreateHoster.tsx",["76","77"],"import React from 'react'\r\nimport Layout from 'antd/lib/layout/layout';\r\nimport { Formik } from 'formik';\r\nimport { Button, Form, Input, Space, Typography } from 'antd';\r\nimport { useCreateHosterMutation } from '../../generated/graphql';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nconst formItemLayout = {\r\n  labelCol: { span: 4 },\r\n  wrapperCol: { span: 10 },\r\n}\r\n\r\nconst buttonItemLayout = {\r\n  wrapperCol: { span: 8, offset: 4 },\r\n}\r\n\r\nconst CreateHoster: React.FC = (props) => {\r\n  const [createHoster] = useCreateHosterMutation()\r\n  const history = useHistory()\r\n  return (\r\n    <Formik\r\n      initialValues={{ hosterName: '', siteLink: '', link: '', login: '', passsword: '' }}\r\n      onSubmit={async (values) => {\r\n        const data = await createHoster({\r\n          variables: {\r\n            createHosterInput: {\r\n              name: values.hosterName,\r\n              siteLink: values.siteLink,\r\n              authData: {\r\n                link: values.link,\r\n                login: values.login,\r\n                password: values.passsword\r\n              }\r\n            }\r\n          }\r\n        })\r\n        if(data.data?.createHoster) history.push('/hosters')\r\n\r\n      }}\r\n    >{({ values, handleChange, isSubmitting, handleSubmit, setFieldValue }) => (\r\n      <Layout>\r\n        <Form\r\n          {...formItemLayout}\r\n          layout={'horizontal'}\r\n          onSubmitCapture={handleSubmit}\r\n        >\r\n          <Form.Item\r\n            label=\"Hoster name\"\r\n            name=\"hosterName\"\r\n          >\r\n            <Input\r\n              value={values.hosterName}\r\n              placeholder=\"Hoster namer\"\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Site link\"\r\n            name=\"siteLink\"\r\n          >\r\n            <Input\r\n              value={values.siteLink}\r\n              placeholder=\"Site link\"\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Item>\r\n          <br />\r\n          <Form.Item\r\n            label=\"Login link\"\r\n            name=\"link\"\r\n          >\r\n            <Input\r\n              value={values.link}\r\n              placeholder=\"Login link\"\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Login\"\r\n            name=\"login\"\r\n          >\r\n            <Input\r\n              value={values.login}\r\n              placeholder=\"Login\"\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Password\"\r\n            name=\"password\"\r\n          >\r\n            <Input\r\n              value={values.passsword}\r\n              placeholder=\"Password\"\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Item>\r\n          <br />\r\n          <Form.Item {...buttonItemLayout}>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"button\"\r\n              loading={isSubmitting}\r\n              onClick={() => {\r\n                handleSubmit();\r\n              }}\r\n            >Create</Button>\r\n          </Form.Item>\r\n        </Form>\r\n\r\n\r\n      </Layout>\r\n    )}\r\n    </Formik>\r\n  );\r\n}\r\nexport default CreateHoster","C:\\Users\\joe\\Desktop\\fullstack_pet_nodejs-react\\client\\src\\pages\\sites\\CreateSite.tsx",["78","79","80","81","82"],"C:\\Users\\joe\\Desktop\\fullstack_pet_nodejs-react\\client\\src\\reportWebVitals.ts",[],{"ruleId":"83","severity":1,"message":"84","line":8,"column":9,"nodeType":"85","messageId":"86","endLine":8,"endColumn":14},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"83","severity":1,"message":"91","line":18,"column":9,"nodeType":"85","messageId":"86","endLine":18,"endColumn":17},{"ruleId":"83","severity":1,"message":"92","line":1,"column":27,"nodeType":"85","messageId":"86","endLine":1,"endColumn":31},{"ruleId":"83","severity":1,"message":"93","line":1,"column":33,"nodeType":"85","messageId":"86","endLine":1,"endColumn":38},{"ruleId":"83","severity":1,"message":"94","line":5,"column":10,"nodeType":"85","messageId":"86","endLine":5,"endColumn":18},{"ruleId":"95","severity":1,"message":"96","line":59,"column":31,"nodeType":"97","endLine":59,"endColumn":34},{"ruleId":"95","severity":1,"message":"96","line":78,"column":9,"nodeType":"97","endLine":78,"endColumn":12},{"ruleId":"95","severity":1,"message":"96","line":79,"column":9,"nodeType":"97","endLine":79,"endColumn":12},{"ruleId":"83","severity":1,"message":"98","line":98,"column":26,"nodeType":"85","messageId":"86","endLine":98,"endColumn":31},{"ruleId":"99","severity":1,"message":"100","line":14,"column":74,"nodeType":"101","endLine":14,"endColumn":89},{"ruleId":"95","severity":1,"message":"96","line":27,"column":47,"nodeType":"97","endLine":27,"endColumn":50},{"ruleId":"95","severity":1,"message":"96","line":35,"column":9,"nodeType":"97","endLine":35,"endColumn":12},{"ruleId":"102","severity":1,"message":"103","line":46,"column":28,"nodeType":"104","messageId":"105","endLine":46,"endColumn":31},{"ruleId":"87","replacedBy":"106"},{"ruleId":"89","replacedBy":"107"},{"ruleId":"83","severity":1,"message":"108","line":4,"column":31,"nodeType":"85","messageId":"86","endLine":4,"endColumn":36},{"ruleId":"83","severity":1,"message":"109","line":4,"column":38,"nodeType":"85","messageId":"86","endLine":4,"endColumn":48},{"ruleId":"83","severity":1,"message":"108","line":4,"column":39,"nodeType":"85","messageId":"86","endLine":4,"endColumn":44},{"ruleId":"83","severity":1,"message":"109","line":4,"column":46,"nodeType":"85","messageId":"86","endLine":4,"endColumn":56},{"ruleId":"83","severity":1,"message":"110","line":5,"column":27,"nodeType":"85","messageId":"86","endLine":5,"endColumn":50},{"ruleId":"83","severity":1,"message":"111","line":6,"column":10,"nodeType":"85","messageId":"86","endLine":6,"endColumn":23},{"ruleId":"83","severity":1,"message":"112","line":57,"column":15,"nodeType":"85","messageId":"86","endLine":57,"endColumn":19},"@typescript-eslint/no-unused-vars","'Title' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["113"],"no-negated-in-lhs",["114"],"'userData' is assigned a value but never used.","'List' is defined but never used.","'Radio' is defined but never used.","'useState' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'error' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected",["113"],["114"],"'Space' is defined but never used.","'Typography' is defined but never used.","'useCreateHosterMutation' is defined but never used.","'AnyAaaaRecord' is defined but never used.","'data' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]