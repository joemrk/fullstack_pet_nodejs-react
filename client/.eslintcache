[{"C:\\Users\\joe\\Desktop\\fullstack_pet_nodejs-react\\client\\src\\pages\\auth\\Auth.tsx":"1","C:\\Users\\joe\\Desktop\\fullstack_pet_nodejs-react\\client\\src\\Components\\Navbar.tsx":"2","C:\\Users\\joe\\Desktop\\fullstack_pet_nodejs-react\\client\\src\\Routes.tsx":"3","C:\\Users\\joe\\Desktop\\fullstack_pet_nodejs-react\\client\\src\\index.tsx":"4","C:\\Users\\joe\\Desktop\\fullstack_pet_nodejs-react\\client\\src\\pages\\sites\\Sites.tsx":"5","C:\\Users\\joe\\Desktop\\fullstack_pet_nodejs-react\\client\\src\\pages\\auth\\AfterAuth.tsx":"6","C:\\Users\\joe\\Desktop\\fullstack_pet_nodejs-react\\client\\src\\hooks\\auth.hook.ts":"7","C:\\Users\\joe\\Desktop\\fullstack_pet_nodejs-react\\client\\src\\generated\\graphql.tsx":"8","C:\\Users\\joe\\Desktop\\fullstack_pet_nodejs-react\\client\\src\\pages\\hosters\\Hosters.tsx":"9","C:\\Users\\joe\\Desktop\\fullstack_pet_nodejs-react\\client\\src\\App.tsx":"10","C:\\Users\\joe\\Desktop\\fullstack_pet_nodejs-react\\client\\src\\pages\\hosters\\CreateHoster.tsx":"11","C:\\Users\\joe\\Desktop\\fullstack_pet_nodejs-react\\client\\src\\pages\\sites\\CreateSite.tsx":"12","C:\\Users\\joe\\Desktop\\fullstack_pet_nodejs-react\\client\\src\\reportWebVitals.ts":"13","C:\\Users\\joe\\Desktop\\fullstack_pet_nodejs-react\\client\\src\\pages\\campaigns\\Campaigns.tsx":"14","C:\\Users\\joe\\Desktop\\fullstack_pet_nodejs-react\\client\\src\\pages\\campaigns\\CreateCampaign.tsx":"15"},{"size":5239,"mtime":1608063842911,"results":"16","hashOfConfig":"17"},{"size":1467,"mtime":1608325346796,"results":"18","hashOfConfig":"17"},{"size":2056,"mtime":1608240169940,"results":"19","hashOfConfig":"17"},{"size":1235,"mtime":1607980365759,"results":"20","hashOfConfig":"17"},{"size":3015,"mtime":1608325356942,"results":"21","hashOfConfig":"17"},{"size":635,"mtime":1607192912530,"results":"22","hashOfConfig":"17"},{"size":1140,"mtime":1607185865167,"results":"23","hashOfConfig":"17"},{"size":23825,"mtime":1608240761404,"results":"24","hashOfConfig":"17"},{"size":1480,"mtime":1608149996027,"results":"25","hashOfConfig":"17"},{"size":802,"mtime":1607186534823,"results":"26","hashOfConfig":"17"},{"size":3206,"mtime":1608066870499,"results":"27","hashOfConfig":"17"},{"size":4472,"mtime":1608239765409,"results":"28","hashOfConfig":"17"},{"size":425,"mtime":1606427118345,"results":"29","hashOfConfig":"17"},{"size":1180,"mtime":1608241728529,"results":"30","hashOfConfig":"17"},{"size":2016,"mtime":1608241456343,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},"qq2ovg",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"43"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"35"},"C:\\Users\\joe\\Desktop\\fullstack_pet_nodejs-react\\client\\src\\pages\\auth\\Auth.tsx",["71"],"import { Button, Form, Input, Space, Typography } from 'antd';\r\nimport Layout, { Content } from 'antd/lib/layout/layout';\r\nimport { Formik } from 'formik';\r\nimport React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useLoginMutation, useRegisterMutation } from '../../generated/graphql';\r\n\r\nconst { Title } = Typography;\r\n\r\nconst Auth: React.FC = (props) => {\r\n    const [registration] = useRegisterMutation()\r\n    const [login] = useLoginMutation()\r\n    const history = useHistory()\r\n\r\n    const setToken = (token: string) => {\r\n        if (token && typeof token === 'string') {\r\n            localStorage.setItem('token', token)\r\n            history.push('/afterauth')\r\n        }\r\n    }\r\n    return (\r\n        <Formik\r\n            initialValues={{ username: \"\", password: \"\", loginBtn: false, errors: [''] }}\r\n            onSubmit={async (values) => {\r\n                const authInput = {\r\n                    variables: {\r\n                        input: {\r\n                            password: values.password,\r\n                            username: values.username\r\n                        }\r\n                    }\r\n                }\r\n                if (values.loginBtn) {\r\n                    const result = await login(authInput)\r\n                    console.log(result);\r\n\r\n                    if (result.data?.login.error) values.errors = result.data.login.error\r\n                    else if (result.data?.login) {\r\n                        const token = result.data.login.token!\r\n                        setToken(token)\r\n                    }\r\n                }\r\n                if (!values.loginBtn) {\r\n                    const result = await registration(authInput)\r\n                    console.log(result);\r\n\r\n                    if (result.data?.registration.error) values.errors = result.data.registration.error\r\n                    else if (result.data?.registration) {\r\n                        const token = result.data.registration.token!\r\n                        setToken(token)\r\n                    }\r\n                }\r\n            }}\r\n        >\r\n            {({ values, handleChange, isSubmitting, handleSubmit, setFieldValue }) => (\r\n                <Layout>\r\n                    <Content\r\n                        style={{\r\n                            maxWidth: '600px',\r\n                            margin: '0 auto',\r\n                            paddingTop: '20vh',\r\n                            display: 'flex',\r\n                            height: '100vh'\r\n                        }}\r\n                    >\r\n                        <Form\r\n                            labelAlign={'left'}\r\n                            layout={'vertical'}\r\n                            size={'middle'}\r\n                            onSubmitCapture={handleSubmit}\r\n                        >\r\n                            <Form.Item\r\n                                label=\"Username\"\r\n                                name=\"username\"\r\n                                rules={[{ required: true, message: 'Please input your username!' }]}\r\n                            >\r\n                                <Input\r\n                                    value={values.username}\r\n                                    onChange={handleChange}\r\n                                />\r\n                            </Form.Item>\r\n\r\n                            <Form.Item\r\n                                label=\"Password\"\r\n                                name=\"password\"\r\n                                rules={[{ required: true, message: 'Please input your password!' }]}\r\n                            >\r\n                                <Input.Password\r\n                                    value={values.password}\r\n                                    onChange={handleChange}\r\n                                />\r\n                            </Form.Item>\r\n\r\n                            <Form.Item>\r\n                                <Space>\r\n                                    <Button\r\n                                        type=\"primary\"\r\n                                        htmlType=\"button\"\r\n                                        loading={isSubmitting}\r\n                                        onClick={() => {\r\n                                            setFieldValue('loginBtn', true)\r\n                                            handleSubmit();\r\n                                        }}\r\n                                    > Login </Button>\r\n                                    <Button\r\n                                        type=\"primary\"\r\n                                        htmlType=\"button\"\r\n                                        loading={isSubmitting}\r\n                                        onClick={() => {\r\n                                            handleSubmit();\r\n                                        }}\r\n                                    > Register </Button>\r\n\r\n                                </Space>\r\n                            </Form.Item>\r\n\r\n                            {values.errors.map(e => <p style={{ color: 'red' }}>{e}</p>)}\r\n                        </Form>\r\n                    </Content>\r\n                </Layout>\r\n            )}\r\n        </Formik>\r\n    );\r\n}\r\nexport default Auth",["72","73"],"C:\\Users\\joe\\Desktop\\fullstack_pet_nodejs-react\\client\\src\\Components\\Navbar.tsx",[],"C:\\Users\\joe\\Desktop\\fullstack_pet_nodejs-react\\client\\src\\Routes.tsx",[],"C:\\Users\\joe\\Desktop\\fullstack_pet_nodejs-react\\client\\src\\index.tsx",["74"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n// import 'antd/dist/antd.min.css'\nimport 'antd/dist/antd.dark.css'\nimport 'antd/dist/antd.min.js'\n\nimport { ApolloClient, createHttpLink, InMemoryCache, ApolloProvider } from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\n\nconst httpLink = createHttpLink({\n  uri: 'http://localhost:4000/graphql',\n});\n\n  const authLink = setContext((_, { headers}) => {\n  const token = localStorage.getItem('token');\n  const userData = localStorage.getItem('userData')\n  return {\n    headers: {\n      ...headers,\n      ...(token ? {authorization: `Bearer ${token}`} : {}),\n      // ...(userData ? {user: `${userData}`} : {}),\n    }\n  }\n});\n\n// const userLink = setContext((_, previousContext) => ({\n//   previousContext:{\n//     ...previousContext,\n//     user: {role: 'role'}\n//   }\n// }));\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache()\n});\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <ApolloProvider client={client}>\n      <App />\n    </ApolloProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();",["75","76"],"C:\\Users\\joe\\Desktop\\fullstack_pet_nodejs-react\\client\\src\\pages\\sites\\Sites.tsx",["77","78","79","80","81","82","83"],"C:\\Users\\joe\\Desktop\\fullstack_pet_nodejs-react\\client\\src\\pages\\auth\\AfterAuth.tsx",[],"C:\\Users\\joe\\Desktop\\fullstack_pet_nodejs-react\\client\\src\\hooks\\auth.hook.ts",[],"C:\\Users\\joe\\Desktop\\fullstack_pet_nodejs-react\\client\\src\\generated\\graphql.tsx",[],"C:\\Users\\joe\\Desktop\\fullstack_pet_nodejs-react\\client\\src\\pages\\hosters\\Hosters.tsx",["84","85","86","87"],"import { Button, Space, Table } from 'antd';\r\nimport Layout from 'antd/lib/layout/layout';\r\nimport React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { HosterEntity, useHostersQuery } from '../../generated/graphql';\r\n\r\n\r\n\r\nconst columns = [\r\n  {\r\n    title: 'Name',\r\n    dataIndex: 'name',\r\n    key: 'name',\r\n    render: (_: any, record: HosterEntity) => (<a href={record.siteLink} target=\"_blank\">{record.name}</a>)\r\n  },\r\n\r\n  {\r\n    title: 'Sites count',\r\n    dataIndex: 'sitesCount',\r\n    key: 'sitesCount',\r\n  },\r\n\r\n  {\r\n    title: 'Auth data',\r\n    dataIndex: 'sitesCount',\r\n    key: 'sitesCount',\r\n    render: (_: any, record: HosterEntity) => <a>Show</a>\r\n  },\r\n\r\n  {\r\n    title: 'Action',\r\n    key: 'x',\r\n    render: (_: any, record: HosterEntity) => (\r\n      <Space size=\"middle\">\r\n        <a>Edit</a>\r\n        <a href={`/sites?byHoster=${record.id}`}>Sites</a>\r\n      </Space>\r\n\r\n    )\r\n  }\r\n]\r\n\r\n\r\n\r\n\r\nconst Hosters: React.FC = ({ }) => {\r\n\r\n  const { data, loading } = useHostersQuery()\r\n  const history = useHistory()\r\n\r\n\r\n\r\n\r\n  if (loading) return <div>Loading...</div>\r\n  return (\r\n    <Layout>\r\n      <div>\r\n        <Button\r\n          type=\"primary\"\r\n          size={'large'}\r\n          onClick={() => { history.push('/hosters/create') }}\r\n        > Create\r\n        </Button>\r\n      </div>\r\n      <br />\r\n\r\n      <Table\r\n        dataSource={data?.hosters}\r\n        columns={columns} />\r\n\r\n\r\n\r\n    </Layout>\r\n  );\r\n}\r\nexport default Hosters","C:\\Users\\joe\\Desktop\\fullstack_pet_nodejs-react\\client\\src\\App.tsx",[],"C:\\Users\\joe\\Desktop\\fullstack_pet_nodejs-react\\client\\src\\pages\\hosters\\CreateHoster.tsx",["88","89"],"import React from 'react'\r\nimport Layout from 'antd/lib/layout/layout';\r\nimport { Formik } from 'formik';\r\nimport { Button, Form, Input, Space, Typography } from 'antd';\r\nimport { useCreateHosterMutation } from '../../generated/graphql';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nconst formItemLayout = {\r\n  labelCol: { span: 4 },\r\n  wrapperCol: { span: 10 },\r\n}\r\n\r\nconst buttonItemLayout = {\r\n  wrapperCol: { span: 8, offset: 4 },\r\n}\r\n\r\nconst CreateHoster: React.FC = (props) => {\r\n  const [createHoster] = useCreateHosterMutation()\r\n  const history = useHistory()\r\n  return (\r\n    <Formik\r\n      initialValues={{ hosterName: '', siteLink: '', link: '', login: '', passsword: '' }}\r\n      onSubmit={async (values) => {\r\n        const data = await createHoster({\r\n          variables: {\r\n            createHosterInput: {\r\n              name: values.hosterName,\r\n              siteLink: values.siteLink,\r\n              authData: {\r\n                link: values.link,\r\n                login: values.login,\r\n                password: values.passsword\r\n              }\r\n            }\r\n          }\r\n        })\r\n        if(data.data?.createHoster) history.push('/hosters')\r\n\r\n      }}\r\n    >{({ values, handleChange, isSubmitting, handleSubmit, setFieldValue }) => (\r\n      <Layout>\r\n        <Form\r\n          {...formItemLayout}\r\n          layout={'horizontal'}\r\n          onSubmitCapture={handleSubmit}\r\n        >\r\n          <Form.Item\r\n            label=\"Hoster name\"\r\n            name=\"hosterName\"\r\n          >\r\n            <Input\r\n              value={values.hosterName}\r\n              placeholder=\"Hoster namer\"\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Site link\"\r\n            name=\"siteLink\"\r\n          >\r\n            <Input\r\n              value={values.siteLink}\r\n              placeholder=\"Site link\"\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Item>\r\n          <br />\r\n          <Form.Item\r\n            label=\"Login link\"\r\n            name=\"link\"\r\n          >\r\n            <Input\r\n              value={values.link}\r\n              placeholder=\"Login link\"\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Login\"\r\n            name=\"login\"\r\n          >\r\n            <Input\r\n              value={values.login}\r\n              placeholder=\"Login\"\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Password\"\r\n            name=\"password\"\r\n          >\r\n            <Input\r\n              value={values.passsword}\r\n              placeholder=\"Password\"\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Item>\r\n          <br />\r\n          <Form.Item {...buttonItemLayout}>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"button\"\r\n              loading={isSubmitting}\r\n              onClick={() => {\r\n                handleSubmit();\r\n              }}\r\n            >Create</Button>\r\n          </Form.Item>\r\n        </Form>\r\n\r\n\r\n      </Layout>\r\n    )}\r\n    </Formik>\r\n  );\r\n}\r\nexport default CreateHoster",["90","91"],"C:\\Users\\joe\\Desktop\\fullstack_pet_nodejs-react\\client\\src\\pages\\sites\\CreateSite.tsx",["92","93","94","95","96"],"C:\\Users\\joe\\Desktop\\fullstack_pet_nodejs-react\\client\\src\\reportWebVitals.ts",[],"C:\\Users\\joe\\Desktop\\fullstack_pet_nodejs-react\\client\\src\\pages\\campaigns\\Campaigns.tsx",["97","98","99","100"],"import { Button, Space, Table } from 'antd';\r\nimport Layout from 'antd/lib/layout/layout';\r\nimport React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useCampaignsQuery } from '../../generated/graphql';\r\n\r\n\r\n\r\nconst columns = [\r\n  {\r\n    title: 'Langue',\r\n    dataIndex: 'langue',\r\n    key: 'langue',\r\n  },\r\n\r\n  {\r\n    title: 'Campaign name',\r\n    dataIndex: 'campaignName',\r\n    key: 'campaignName',\r\n  },\r\n  {\r\n    title: 'Action',\r\n    key: 'x',\r\n    render: (text:string) => (\r\n      <Space size=\"middle\">\r\n        <a>Edit</a>\r\n        <a>Delete</a>\r\n        <a>Sites</a>\r\n      </Space>\r\n\r\n    )\r\n  }\r\n]\r\n\r\nconst Campaigns: React.FC = ({ }) => {\r\n\r\n  const { data, loading } = useCampaignsQuery()\r\n  const history = useHistory()\r\n\r\n\r\n  if (loading) return <div>Loading...</div>\r\n  return (\r\n    <Layout>\r\n      <div>\r\n        <Button\r\n          type=\"primary\"\r\n          size={'large'}\r\n          onClick={() => { history.push('/campaigns/create') }}\r\n        > Create\r\n        </Button>\r\n      </div>\r\n      <br />\r\n\r\n      <Table\r\n        dataSource={data?.campaigns}\r\n        columns={columns} />\r\n    </Layout>\r\n  );\r\n}\r\nexport default Campaigns","C:\\Users\\joe\\Desktop\\fullstack_pet_nodejs-react\\client\\src\\pages\\campaigns\\CreateCampaign.tsx",["101","102","103"],"import React from 'react'\r\nimport { Formik } from 'formik'\r\nimport Layout from 'antd/lib/layout/layout';\r\nimport { Button, Form, Input, Space, Typography } from 'antd';\r\nimport { useCreateCampaignMutation } from '../../generated/graphql';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nconst formItemLayout = {\r\n  labelCol: { span: 4 },\r\n  wrapperCol: { span: 10 },\r\n}\r\n\r\nconst buttonItemLayout = {\r\n  wrapperCol: { span: 8, offset: 4 },\r\n}\r\n\r\n\r\nconst CreateCampaign: React.FC = ({ }) => {\r\n\r\n  const [createCampaign] = useCreateCampaignMutation()\r\n  const history = useHistory()\r\n\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{ langue: '', campaignName: '' }}\r\n      onSubmit={async (values) => {\r\n        const data = await createCampaign({variables: {input: values}})\r\n        if(data.data?.createCampaign) history.push('/campaigns')\r\n        \r\n      }} >\r\n      {({ values, handleChange, isSubmitting, handleSubmit, setFieldValue }) => (\r\n        <Layout>\r\n          <Form\r\n            {...formItemLayout}\r\n            layout={'horizontal'}\r\n            onSubmitCapture={handleSubmit} >\r\n\r\n            <Form.Item\r\n              label=\"Campaign langue\"\r\n              name=\"langue\" >\r\n              <Input\r\n                value={values.langue}\r\n                onChange={handleChange} />\r\n            </Form.Item>\r\n            <Form.Item\r\n              label=\"Campaign name\"\r\n              name=\"campaignName\" >\r\n              <Input\r\n                value={values.campaignName}\r\n                onChange={handleChange} />\r\n            </Form.Item>\r\n\r\n\r\n            <br />\r\n            <Form.Item {...buttonItemLayout}>\r\n              <Button\r\n                type=\"primary\"\r\n                htmlType=\"button\"\r\n                loading={isSubmitting}\r\n                onClick={() => {\r\n                  handleSubmit();\r\n                }}\r\n              >Create</Button>\r\n            </Form.Item>\r\n          </Form>\r\n\r\n\r\n        </Layout>\r\n      )}\r\n    </Formik>\r\n  )\r\n}\r\nexport default CreateCampaign",{"ruleId":"104","severity":1,"message":"105","line":8,"column":9,"nodeType":"106","messageId":"107","endLine":8,"endColumn":14},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"104","severity":1,"message":"112","line":18,"column":9,"nodeType":"106","messageId":"107","endLine":18,"endColumn":17},{"ruleId":"108","replacedBy":"113"},{"ruleId":"110","replacedBy":"114"},{"ruleId":"104","severity":1,"message":"115","line":1,"column":27,"nodeType":"106","messageId":"107","endLine":1,"endColumn":31},{"ruleId":"104","severity":1,"message":"116","line":1,"column":33,"nodeType":"106","messageId":"107","endLine":1,"endColumn":38},{"ruleId":"104","severity":1,"message":"117","line":5,"column":10,"nodeType":"106","messageId":"107","endLine":5,"endColumn":18},{"ruleId":"118","severity":1,"message":"119","line":59,"column":31,"nodeType":"120","endLine":59,"endColumn":34},{"ruleId":"118","severity":1,"message":"119","line":78,"column":9,"nodeType":"120","endLine":78,"endColumn":12},{"ruleId":"118","severity":1,"message":"119","line":79,"column":9,"nodeType":"120","endLine":79,"endColumn":12},{"ruleId":"104","severity":1,"message":"121","line":98,"column":26,"nodeType":"106","messageId":"107","endLine":98,"endColumn":31},{"ruleId":"122","severity":1,"message":"123","line":14,"column":74,"nodeType":"124","endLine":14,"endColumn":89},{"ruleId":"118","severity":1,"message":"119","line":27,"column":47,"nodeType":"120","endLine":27,"endColumn":50},{"ruleId":"118","severity":1,"message":"119","line":35,"column":9,"nodeType":"120","endLine":35,"endColumn":12},{"ruleId":"125","severity":1,"message":"126","line":46,"column":28,"nodeType":"127","messageId":"128","endLine":46,"endColumn":31},{"ruleId":"104","severity":1,"message":"129","line":4,"column":31,"nodeType":"106","messageId":"107","endLine":4,"endColumn":36},{"ruleId":"104","severity":1,"message":"130","line":4,"column":38,"nodeType":"106","messageId":"107","endLine":4,"endColumn":48},{"ruleId":"108","replacedBy":"131"},{"ruleId":"110","replacedBy":"132"},{"ruleId":"104","severity":1,"message":"129","line":4,"column":39,"nodeType":"106","messageId":"107","endLine":4,"endColumn":44},{"ruleId":"104","severity":1,"message":"130","line":4,"column":46,"nodeType":"106","messageId":"107","endLine":4,"endColumn":56},{"ruleId":"104","severity":1,"message":"133","line":5,"column":27,"nodeType":"106","messageId":"107","endLine":5,"endColumn":50},{"ruleId":"104","severity":1,"message":"134","line":6,"column":10,"nodeType":"106","messageId":"107","endLine":6,"endColumn":23},{"ruleId":"104","severity":1,"message":"135","line":32,"column":10,"nodeType":"106","messageId":"107","endLine":32,"endColumn":20},{"ruleId":"118","severity":1,"message":"119","line":26,"column":9,"nodeType":"120","endLine":26,"endColumn":12},{"ruleId":"118","severity":1,"message":"119","line":27,"column":9,"nodeType":"120","endLine":27,"endColumn":12},{"ruleId":"118","severity":1,"message":"119","line":28,"column":9,"nodeType":"120","endLine":28,"endColumn":12},{"ruleId":"125","severity":1,"message":"126","line":35,"column":30,"nodeType":"127","messageId":"128","endLine":35,"endColumn":33},{"ruleId":"104","severity":1,"message":"129","line":4,"column":31,"nodeType":"106","messageId":"107","endLine":4,"endColumn":36},{"ruleId":"104","severity":1,"message":"130","line":4,"column":38,"nodeType":"106","messageId":"107","endLine":4,"endColumn":48},{"ruleId":"125","severity":1,"message":"126","line":19,"column":35,"nodeType":"127","messageId":"128","endLine":19,"endColumn":38},"@typescript-eslint/no-unused-vars","'Title' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["136"],"no-negated-in-lhs",["137"],"'userData' is assigned a value but never used.",["136"],["137"],"'List' is defined but never used.","'Radio' is defined but never used.","'useState' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'error' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'Space' is defined but never used.","'Typography' is defined but never used.",["136"],["137"],"'useCreateHosterMutation' is defined but never used.","'AnyAaaaRecord' is defined but never used.","'createSite' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]