[{"C:\\Users\\joe\\Desktop\\fullstack_pet_nodejs-react\\client\\src\\App.tsx":"1","C:\\Users\\joe\\Desktop\\fullstack_pet_nodejs-react\\client\\src\\generated\\graphql.tsx":"2","C:\\Users\\joe\\Desktop\\fullstack_pet_nodejs-react\\client\\src\\pages\\sites\\EditSite.tsx":"3","C:\\Users\\joe\\Desktop\\fullstack_pet_nodejs-react\\client\\src\\index.tsx":"4","C:\\Users\\joe\\Desktop\\fullstack_pet_nodejs-react\\client\\src\\hooks\\auth.hook.ts":"5","C:\\Users\\joe\\Desktop\\fullstack_pet_nodejs-react\\client\\src\\context\\AuthContext.tsx":"6","C:\\Users\\joe\\Desktop\\fullstack_pet_nodejs-react\\client\\src\\Components\\Navbar.tsx":"7","C:\\Users\\joe\\Desktop\\fullstack_pet_nodejs-react\\client\\src\\pages\\auth\\Auth.tsx":"8","C:\\Users\\joe\\Desktop\\fullstack_pet_nodejs-react\\client\\src\\pages\\hosters\\Hosters.tsx":"9","C:\\Users\\joe\\Desktop\\fullstack_pet_nodejs-react\\client\\src\\pages\\campaigns\\Campaigns.tsx":"10","C:\\Users\\joe\\Desktop\\fullstack_pet_nodejs-react\\client\\src\\pages\\users\\CreateUser.tsx":"11","C:\\Users\\joe\\Desktop\\fullstack_pet_nodejs-react\\client\\src\\pages\\sites\\CreateSite.tsx":"12","C:\\Users\\joe\\Desktop\\fullstack_pet_nodejs-react\\client\\src\\pages\\campaigns\\CreateCampaign.tsx":"13","C:\\Users\\joe\\Desktop\\fullstack_pet_nodejs-react\\client\\src\\pages\\sites\\Sites.tsx":"14","C:\\Users\\joe\\Desktop\\fullstack_pet_nodejs-react\\client\\src\\pages\\users\\Users.tsx":"15","C:\\Users\\joe\\Desktop\\fullstack_pet_nodejs-react\\client\\src\\reportWebVitals.ts":"16","C:\\Users\\joe\\Desktop\\fullstack_pet_nodejs-react\\client\\src\\Routes.tsx":"17","C:\\Users\\joe\\Desktop\\fullstack_pet_nodejs-react\\client\\src\\pages\\auth\\AfterAuth.tsx":"18"},{"size":802,"mtime":1607186534823,"results":"19","hashOfConfig":"20"},{"size":30395,"mtime":1609885351258,"results":"21","hashOfConfig":"20"},{"size":5510,"mtime":1609873968557,"results":"22","hashOfConfig":"20"},{"size":1057,"mtime":1609881709399,"results":"23","hashOfConfig":"20"},{"size":1140,"mtime":1607185865167,"results":"24","hashOfConfig":"20"},{"size":294,"mtime":1607178461493,"results":"25","hashOfConfig":"20"},{"size":1601,"mtime":1608841871328,"results":"26","hashOfConfig":"20"},{"size":5066,"mtime":1608935156265,"results":"27","hashOfConfig":"20"},{"size":1516,"mtime":1608922666106,"results":"28","hashOfConfig":"20"},{"size":1216,"mtime":1608922650679,"results":"29","hashOfConfig":"20"},{"size":3093,"mtime":1609873625850,"results":"30","hashOfConfig":"20"},{"size":5427,"mtime":1609874692898,"results":"31","hashOfConfig":"20"},{"size":2155,"mtime":1609875243004,"results":"32","hashOfConfig":"20"},{"size":5509,"mtime":1609885569723,"results":"33","hashOfConfig":"20"},{"size":1473,"mtime":1608922688493,"results":"34","hashOfConfig":"20"},{"size":425,"mtime":1606427118345,"results":"35","hashOfConfig":"20"},{"size":2523,"mtime":1609881742287,"results":"36","hashOfConfig":"20"},{"size":635,"mtime":1607192912530,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"qq2ovg",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"61"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\joe\\Desktop\\fullstack_pet_nodejs-react\\client\\src\\App.tsx",[],"C:\\Users\\joe\\Desktop\\fullstack_pet_nodejs-react\\client\\src\\generated\\graphql.tsx",[],"C:\\Users\\joe\\Desktop\\fullstack_pet_nodejs-react\\client\\src\\pages\\sites\\EditSite.tsx",[],["80","81"],"C:\\Users\\joe\\Desktop\\fullstack_pet_nodejs-react\\client\\src\\index.tsx",["82"],"C:\\Users\\joe\\Desktop\\fullstack_pet_nodejs-react\\client\\src\\hooks\\auth.hook.ts",[],"C:\\Users\\joe\\Desktop\\fullstack_pet_nodejs-react\\client\\src\\context\\AuthContext.tsx",[],"C:\\Users\\joe\\Desktop\\fullstack_pet_nodejs-react\\client\\src\\Components\\Navbar.tsx",[],"C:\\Users\\joe\\Desktop\\fullstack_pet_nodejs-react\\client\\src\\pages\\auth\\Auth.tsx",["83","84"],"C:\\Users\\joe\\Desktop\\fullstack_pet_nodejs-react\\client\\src\\pages\\hosters\\Hosters.tsx",["85","86","87","88"],"import { Button, Space, Table } from 'antd';\r\nimport Layout from 'antd/lib/layout/layout';\r\nimport React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { HosterEntity, useHostersQuery } from '../../generated/graphql';\r\n\r\n\r\n\r\nconst columns = [\r\n  {\r\n    title: 'Name',\r\n    dataIndex: 'name',\r\n    key: 'name',\r\n    render: (_: any, record: HosterEntity) => (<a href={record.siteLink} target=\"_blank\">{record.name}</a>)\r\n  },\r\n\r\n  {\r\n    title: 'Sites count',\r\n    dataIndex: 'sitesCount',\r\n    key: 'sitesCount',\r\n  },\r\n\r\n  {\r\n    title: 'Auth data',\r\n    dataIndex: 'sitesCount',\r\n    key: 'sitesCount',\r\n    render: (_: any, record: HosterEntity) => <a>Show</a>\r\n  },\r\n\r\n  {\r\n    title: 'Action',\r\n    key: 'x',\r\n    render: (_: any, record: HosterEntity) => (\r\n      <Space size=\"middle\">\r\n        <a>Edit</a>\r\n        <a href={`/sites?byHoster=${record.id}`}>Sites</a>\r\n      </Space>\r\n\r\n    )\r\n  }\r\n]\r\n\r\n\r\n\r\n\r\nconst Hosters: React.FC = ({ }) => {\r\n\r\n  const { data, loading } = useHostersQuery({ fetchPolicy: \"cache-and-network\" })\r\n  const history = useHistory()\r\n\r\n\r\n\r\n\r\n  if (loading) return <div>Loading...</div>\r\n  return (\r\n    <Layout>\r\n      <div>\r\n        <Button\r\n          type=\"primary\"\r\n          size={'large'}\r\n          onClick={() => { history.push('/hosters/create') }}\r\n        > Create\r\n        </Button>\r\n      </div>\r\n      <br />\r\n\r\n      <Table\r\n        dataSource={data?.hosters}\r\n        columns={columns} />\r\n\r\n\r\n\r\n    </Layout>\r\n  );\r\n}\r\nexport default Hosters","C:\\Users\\joe\\Desktop\\fullstack_pet_nodejs-react\\client\\src\\pages\\campaigns\\Campaigns.tsx",["89","90","91","92"],"import { Button, Space, Table } from 'antd';\r\nimport Layout from 'antd/lib/layout/layout';\r\nimport React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useCampaignsQuery } from '../../generated/graphql';\r\n\r\n\r\n\r\nconst columns = [\r\n  {\r\n    title: 'Langue',\r\n    dataIndex: 'langue',\r\n    key: 'langue',\r\n  },\r\n\r\n  {\r\n    title: 'Campaign name',\r\n    dataIndex: 'campaignName',\r\n    key: 'campaignName',\r\n  },\r\n  {\r\n    title: 'Action',\r\n    key: 'x',\r\n    render: (text:string) => (\r\n      <Space size=\"middle\">\r\n        <a>Edit</a>\r\n        <a>Delete</a>\r\n        <a>Sites</a>\r\n      </Space>\r\n\r\n    )\r\n  }\r\n]\r\n\r\nconst Campaigns: React.FC = ({ }) => {\r\n\r\n  const { data, loading } = useCampaignsQuery({ fetchPolicy: \"cache-and-network\" })\r\n  const history = useHistory()\r\n\r\n\r\n  if (loading) return <div>Loading...</div>\r\n  return (\r\n    <Layout>\r\n      <div>\r\n        <Button\r\n          type=\"primary\"\r\n          size={'large'}\r\n          onClick={() => { history.push('/campaigns/create') }}\r\n        > Create\r\n        </Button>\r\n      </div>\r\n      <br />\r\n\r\n      <Table\r\n        dataSource={data?.campaigns}\r\n        columns={columns} />\r\n    </Layout>\r\n  );\r\n}\r\nexport default Campaigns",["93","94"],"C:\\Users\\joe\\Desktop\\fullstack_pet_nodejs-react\\client\\src\\pages\\users\\CreateUser.tsx",["95"],"C:\\Users\\joe\\Desktop\\fullstack_pet_nodejs-react\\client\\src\\pages\\sites\\CreateSite.tsx",["96"],"import { Button, Form, Input, Select } from 'antd';\r\nimport Layout from 'antd/lib/layout/layout';\r\nimport { Formik } from 'formik';\r\nimport React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useCampaignsQuery, useCreateSiteMutation, useHostersQuery, useUsersQuery } from '../../generated/graphql';\r\n\r\n\r\n\r\n\r\nconst formItemLayout = {\r\n  labelCol: { span: 4 },\r\n  wrapperCol: { span: 10 },\r\n}\r\n\r\nconst buttonItemLayout = {\r\n  wrapperCol: { span: 8, offset: 4 },\r\n}\r\n\r\nconst selectSearchProps = {\r\n  showSearch: true,\r\n  optionFilterProp: \"children\",\r\n  filterOption: (input: any, option: any) =>\r\n    option?.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n}\r\n\r\n\r\nconst CreateSite: React.FC = (props) => {\r\n  const history = useHistory()\r\n  const { data: hostersData, loading: hostersLoading } = useHostersQuery()\r\n  const { data: campaignData, loading: campaignLoading } = useCampaignsQuery()\r\n  const { data: usersData, loading: usersLoading } = useUsersQuery()\r\n\r\n  const [createSite] = useCreateSiteMutation()\r\n\r\n\r\n\r\n  if (hostersLoading && campaignLoading) return <div>Loading...</div>\r\n\r\n  const hosterSelect = hostersData?.hosters ? hostersData?.hosters.map(h => (\r\n    <Select.Option value={h.id}>{h.name}</Select.Option>\r\n  )) : []\r\n\r\n  const campaignSelect = campaignData?.campaigns ? campaignData?.campaigns.map(h => (\r\n    <Select.Option value={h.id}>{h.fullCampaignName}</Select.Option>\r\n  )) : []\r\n\r\n  const usersSelect = usersData?.users ? usersData?.users.map(h => (\r\n    <Select.Option value={h.id}>{h.username}</Select.Option>\r\n  )) : []\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        domainProviderId: '',\r\n        domainProviderName: '',\r\n        hostProviderId: '',\r\n        hostProviderName: '',\r\n        campaignId: '',\r\n        campaignName: '',\r\n        domain: '',\r\n        dedicatedIp: '',\r\n        yandexId: '',\r\n        holderId: '',\r\n        holderName: ''\r\n            }}\r\n      onSubmit={async (values) => {\r\n        const data = await createSite({\r\n          variables: {\r\n            inputs: values\r\n          }\r\n        })\r\n\r\n        if (data.data?.createSite) history.push('/sites')\r\n      }}\r\n    >{({ values, handleChange, isSubmitting, handleSubmit, setFieldValue }) => (\r\n      <Layout>\r\n        <Form\r\n          {...formItemLayout}\r\n          layout={'horizontal'}\r\n          onSubmitCapture={handleSubmit}\r\n        >\r\n          <Form.Item\r\n            rules={[{ required: true, message: 'Field is required!' }]}\r\n            name=\"domainProvider\"\r\n            label=\"Domain provider\">\r\n            <Select\r\n              {...selectSearchProps}\r\n              onChange={(_, o: any) => {\r\n                values.domainProviderId = o.value\r\n                values.domainProviderName = o.children\r\n              }}\r\n            >\r\n              {hosterSelect}\r\n            </Select>\r\n          </Form.Item>\r\n          <Form.Item\r\n            rules={[{ required: true, message: 'Field is required!' }]}\r\n            name=\"hostProvider\"\r\n            label=\"Host provider\">\r\n            <Select\r\n              {...selectSearchProps}\r\n              onChange={(_, o: any) => {\r\n                values.hostProviderId = o.value\r\n                values.hostProviderName = o.children\r\n              }}\r\n            >\r\n              {hosterSelect}\r\n            </Select>\r\n          </Form.Item>\r\n          <Form.Item\r\n            rules={[{ required: true, message: 'Field is required!' }]}\r\n            name=\"campaign\"\r\n            label=\"Campaign\">\r\n            <Select\r\n              {...selectSearchProps}\r\n              onChange={(_, o: any) => {\r\n                values.campaignId = o.value\r\n                values.campaignName = o.children\r\n              }}\r\n            >\r\n              {campaignSelect}\r\n            </Select>\r\n          </Form.Item>\r\n\r\n\r\n          <Form.Item\r\n            rules={[{ required: true, message: 'Field is required!' }]}\r\n            label=\"Domain\"\r\n            name=\"domain\" >\r\n            <Input\r\n              value={values.domain}\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Dedicated IP\"\r\n            name=\"dedicatedIp\"\r\n          >\r\n            <Input\r\n              value={values.dedicatedIp}\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Yandex metrika ID\"\r\n            name=\"yandexId\"\r\n          >\r\n            <Input\r\n              value={values.yandexId}\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Item>\r\n          <br />\r\n          <Form.Item\r\n            name=\"holderName\"\r\n            label=\"Holder\">\r\n            <Select\r\n              {...selectSearchProps}\r\n              onChange={(_, o: any) => {\r\n                values.holderId = o.value\r\n                values.holderName = o.children\r\n              }}\r\n            >\r\n              {usersSelect}\r\n            </Select>\r\n          </Form.Item>\r\n\r\n          <br />\r\n          <Form.Item {...buttonItemLayout}>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"button\"\r\n              loading={isSubmitting}\r\n              onClick={() => {\r\n                handleSubmit();\r\n              }}\r\n            >Create</Button>\r\n          </Form.Item>\r\n        </Form>\r\n\r\n      </Layout>\r\n    )}\r\n    </Formik>\r\n  );\r\n}\r\nexport default CreateSite","C:\\Users\\joe\\Desktop\\fullstack_pet_nodejs-react\\client\\src\\pages\\campaigns\\CreateCampaign.tsx",["97"],"import { Button, Form, Input } from 'antd';\r\nimport Layout from 'antd/lib/layout/layout';\r\nimport { Formik } from 'formik';\r\nimport React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useCreateCampaignMutation } from '../../generated/graphql';\r\n\r\n\r\nconst formItemLayout = {\r\n  labelCol: { span: 4 },\r\n  wrapperCol: { span: 10 },\r\n}\r\n\r\nconst buttonItemLayout = {\r\n  wrapperCol: { span: 8, offset: 4 },\r\n}\r\n\r\n\r\nconst CreateCampaign: React.FC = ({ }) => {\r\n\r\n  const [createCampaign] = useCreateCampaignMutation()\r\n  const history = useHistory()\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{ langue: '', campaignName: '' }}\r\n      onSubmit={async (values) => {\r\n        const data = await createCampaign({variables: {input: values}})\r\n        if(data.data?.createCampaign) history.push('/campaigns')\r\n        \r\n      }} >\r\n      {({ values, handleChange, isSubmitting, handleSubmit, setFieldValue }) => (\r\n        <Layout>\r\n          <Form\r\n            {...formItemLayout}\r\n            layout={'horizontal'}\r\n            onSubmitCapture={handleSubmit} >\r\n\r\n            <Form.Item\r\n            rules={[{ required: true, message: 'Please input this field!' }]}\r\n              label=\"Campaign langue\"\r\n              name=\"langue\" >\r\n              <Input\r\n                value={values.langue}\r\n                onChange={handleChange} />\r\n            </Form.Item>\r\n            <Form.Item\r\n            rules={[{ required: true, message: 'Please input this field!' }]}\r\n              label=\"Campaign name\"\r\n              name=\"campaignName\" >\r\n              <Input\r\n                value={values.campaignName}\r\n                onChange={handleChange} />\r\n            </Form.Item>\r\n\r\n\r\n            <br />\r\n            <Form.Item {...buttonItemLayout}>\r\n              <Button\r\n                type=\"primary\"\r\n                htmlType=\"button\"\r\n                loading={isSubmitting}\r\n                onClick={() => {\r\n                  handleSubmit();\r\n                }}\r\n              >Create</Button>\r\n            </Form.Item>\r\n          </Form>\r\n\r\n\r\n        </Layout>\r\n      )}\r\n    </Formik>\r\n  )\r\n}\r\nexport default CreateCampaign","C:\\Users\\joe\\Desktop\\fullstack_pet_nodejs-react\\client\\src\\pages\\sites\\Sites.tsx",["98","99","100","101"],"C:\\Users\\joe\\Desktop\\fullstack_pet_nodejs-react\\client\\src\\pages\\users\\Users.tsx",["102","103","104"],"C:\\Users\\joe\\Desktop\\fullstack_pet_nodejs-react\\client\\src\\reportWebVitals.ts",[],"C:\\Users\\joe\\Desktop\\fullstack_pet_nodejs-react\\client\\src\\Routes.tsx",[],"C:\\Users\\joe\\Desktop\\fullstack_pet_nodejs-react\\client\\src\\pages\\auth\\AfterAuth.tsx",[],{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":20,"column":9,"nodeType":"111","messageId":"112","endLine":20,"endColumn":17},{"ruleId":"109","severity":1,"message":"113","line":6,"column":28,"nodeType":"111","messageId":"112","endLine":6,"endColumn":47},{"ruleId":"109","severity":1,"message":"114","line":8,"column":9,"nodeType":"111","messageId":"112","endLine":8,"endColumn":14},{"ruleId":"115","severity":1,"message":"116","line":14,"column":74,"nodeType":"117","endLine":14,"endColumn":89},{"ruleId":"118","severity":1,"message":"119","line":27,"column":47,"nodeType":"120","endLine":27,"endColumn":50},{"ruleId":"118","severity":1,"message":"119","line":35,"column":9,"nodeType":"120","endLine":35,"endColumn":12},{"ruleId":"121","severity":1,"message":"122","line":46,"column":28,"nodeType":"123","messageId":"124","endLine":46,"endColumn":31},{"ruleId":"118","severity":1,"message":"119","line":26,"column":9,"nodeType":"120","endLine":26,"endColumn":12},{"ruleId":"118","severity":1,"message":"119","line":27,"column":9,"nodeType":"120","endLine":27,"endColumn":12},{"ruleId":"118","severity":1,"message":"119","line":28,"column":9,"nodeType":"120","endLine":28,"endColumn":12},{"ruleId":"121","severity":1,"message":"122","line":35,"column":30,"nodeType":"123","messageId":"124","endLine":35,"endColumn":33},{"ruleId":"105","replacedBy":"125"},{"ruleId":"107","replacedBy":"126"},{"ruleId":"121","severity":1,"message":"122","line":20,"column":31,"nodeType":"123","messageId":"124","endLine":20,"endColumn":34},{"ruleId":"109","severity":1,"message":"127","line":32,"column":37,"nodeType":"111","messageId":"112","endLine":32,"endColumn":49},{"ruleId":"121","severity":1,"message":"122","line":19,"column":35,"nodeType":"123","messageId":"124","endLine":19,"endColumn":38},{"ruleId":"118","severity":1,"message":"119","line":43,"column":9,"nodeType":"120","endLine":43,"endColumn":90},{"ruleId":"118","severity":1,"message":"128","line":109,"column":61,"nodeType":"120","endLine":109,"endColumn":73},{"ruleId":"118","severity":1,"message":"119","line":118,"column":11,"nodeType":"120","endLine":118,"endColumn":14},{"ruleId":"118","severity":1,"message":"119","line":175,"column":7,"nodeType":"120","endLine":175,"endColumn":75},{"ruleId":"118","severity":1,"message":"119","line":39,"column":9,"nodeType":"120","endLine":39,"endColumn":12},{"ruleId":"118","severity":1,"message":"119","line":40,"column":9,"nodeType":"120","endLine":40,"endColumn":12},{"ruleId":"121","severity":1,"message":"122","line":48,"column":26,"nodeType":"123","messageId":"124","endLine":48,"endColumn":29},"no-native-reassign",["129"],"no-negated-in-lhs",["130"],"@typescript-eslint/no-unused-vars","'userData' is assigned a value but never used.","Identifier","unusedVar","'useRegisterMutation' is defined but never used.","'Title' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected",["129"],["130"],"'usersLoading' is assigned a value but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]